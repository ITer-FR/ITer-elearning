# This file was auto-generated by the Firebase CLI
# https://github.com/firebase/firebase-tools

name: Deploy to Firebase Hosting on PR
"on": pull_request
jobs:
  frontend-end-to-end-tests:
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.15.0-chrome86-ff82

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Install packages
        run: cd frontend && yarn install --frozen-lockfile --prefer-offline

      - name: Unit tests
        run: cd frontend && yarn test

      # - name: Install dependencies
      #   uses: cypress-io/github-action@v2
      #   with:
      #     runTests: false

      - uses: cypress-io/github-action@v2
        with:
          start: yarn start
          install: false
          wait-on: "http://localhost:3000"
          wait-on-timeout: 120
          browser: chrome
          headless: true
          working-directory: frontend

      - uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-screenshots
          path: frontend/cypress/screenshots

  deploy-preview:
    needs: [frontend-end-to-end-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v2
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-nodemodules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-frontend-nodemodules-

      - name: Install packages
        run: cd frontend && yarn install --frozen-lockfile --prefer-offline

      - name: Build
        run: cd frontend && yarn build

      - uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: "${{ secrets.GITHUB_TOKEN }}"
          firebaseServiceAccount: "${{ secrets.FIREBASE_SERVICE_ACCOUNT_ITER_ELEARNING_STAGING }}"
          projectId: iter-elearning-staging
          entryPoint: frontend
        env:
          FIREBASE_CLI_PREVIEWS: hostingchannels
